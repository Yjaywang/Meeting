name: backend CI/CD Pipeline

on:
  push:
    branches: [main]
env:
  twilioAccountSid: ${{secrets.TWILIOACCOUNTSID}}
  twilioAuthToken: ${{secrets.TWILIOAUTHTOKEN}}
  mongooseURL: ${{secrets.MONGOOSEURL}}
  ACCESS_TOKEN_SECRET: ${{secrets.ACCESS_TOKEN_SECRET}}
  REFRESH_TOKEN_SECRET: ${{secrets.REFRESH_TOKEN_SECRET}}
  accessKeyId: ${{secrets.ACCESSKEYID}}
  secretAccessKey: ${{secrets.SECRETACCESSKEY}}
  BUCKET: ${{secrets.BUCKET}}
  DEFAULT_EXPIRATION: ${{secrets.DEFAULT_EXPIRATION}}

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        working-directory: server/
        run: |
          npm install

      - name: Update package index
        run: |
          sudo apt-get update

      - name: active redis server for test
        run: |
          sudo apt install redis
          sudo systemctl start redis.service

      - name: Run tests
        working-directory: server/
        run: |
          sudo npm install --global cross-env
          npm test

  deploy:
    name: Deploy application
    runs-on: ubuntu-latest
    needs: test
    env:
      PRIVATE_KEY: ${{ secrets.DEPLOY_AWS_PRIVATE_KEY  }}
      HOSTNAME: ${{ secrets.DEPLOY_HOSTNAME  }}
      USER_NAME: ${{ secrets.DEPLOY_USERNAME  }}

    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3

      - name: test docker compose
        run: |
          sudo apt-get remove -y moby-containerd moby-runc
          sudo apt-get -y install docker.io
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          sudo chmod 666 /var/run/docker.sock
          docker-compose up --build -d

      - name: Configure SSH enter EC2
        run: |
          mkdir -p ~/.ssh/
          echo "$PRIVATE_KEY" > ~/.ssh/github-actions-key
          chmod 600 ~/.ssh/github-actions-key
          cat >>~/.ssh/config <<END
          Host ec2
            HostName $HOSTNAME
            User $USER_NAME
            IdentityFile ~/.ssh/github-actions-key
            StrictHostKeyChecking no
          END

      - name: pull the latest and start the application
        run: |
          ssh ec2 '
          cd src/Meeting
          docker-compose down
          git remote set-url origin git@github.com:Yjaywang/Meeting.git
          git pull
          docker-compose up --build -d'
